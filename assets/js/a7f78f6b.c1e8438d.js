"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[796],{7856:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var s=t(4848),a=t(8453);const o={},d="Interesting SQL queries",i={id:"Guides/interesting-queries",title:"Interesting SQL queries",description:"The following is a set of example SQL queries that can be run against the db-sync database.",source:"@site/docs/Guides/interesting-queries.md",sourceDirName:"Guides",slug:"/Guides/interesting-queries",permalink:"/cardano-db-sync/Guides/interesting-queries",draft:!1,unlisted:!1,editUrl:"https://github.com/sgillespie/cardano-db-sync/tree/docs/docusaurus/doc/docusaurus/docs/Guides/interesting-queries.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Schema",permalink:"/cardano-db-sync/schema"},next:{title:"Pool OffChain Data",permalink:"/cardano-db-sync/Guides/pool-offchain-data"}},r={},c=[{value:"Chain meta data (<code>queryMeta</code>)",id:"chain-meta-data-querymeta",level:3},{value:"Current total on-chain supply of Ada (<code>queryTotalSupply</code>)",id:"current-total-on-chain-supply-of-ada-querytotalsupply",level:3},{value:"Slot number of the most recent block (<code>queryLatestSlotNo</code>)",id:"slot-number-of-the-most-recent-block-querylatestslotno",level:3},{value:"Size of the cexplorer database",id:"size-of-the-cexplorer-database",level:3},{value:"Size of the cexplorer database table",id:"size-of-the-cexplorer-database-table",level:3},{value:"Sync progress of <code>db-sync</code>",id:"sync-progress-of-db-sync",level:3},{value:"Current valid pools",id:"current-valid-pools",level:3},{value:"Get the stake address for a given Shelley address:",id:"get-the-stake-address-for-a-given-shelley-address",level:3},{value:"Transaction fee for specified transaction hash:",id:"transaction-fee-for-specified-transaction-hash",level:3},{value:"Transaction outputs for specified transaction hash:",id:"transaction-outputs-for-specified-transaction-hash",level:3},{value:"Transaction inputs for specified transaction hash:",id:"transaction-inputs-for-specified-transaction-hash",level:3},{value:"Get per epoch performance statistics (sync time, tx count, etc):",id:"get-per-epoch-performance-statistics-sync-time-tx-count-etc",level:3},{value:"Transaction withdrawals for specified transaction hash:",id:"transaction-withdrawals-for-specified-transaction-hash",level:3},{value:"Get the stake distribution for each pool for a given epoch:",id:"get-the-stake-distribution-for-each-pool-for-a-given-epoch",level:3},{value:"Get the delegation history for a specified stake address",id:"get-the-delegation-history-for-a-specified-stake-address",level:3},{value:"Get the reward history for a specified stake address",id:"get-the-reward-history-for-a-specified-stake-address",level:3},{value:"Get the block number of blocks created in an epoch by a specified pool",id:"get-the-block-number-of-blocks-created-in-an-epoch-by-a-specified-pool",level:3},{value:"Get the number of blocks created by a specified pool for each epoch",id:"get-the-number-of-blocks-created-by-a-specified-pool-for-each-epoch",level:3},{value:"Get the tx_id, tx_block_id, tx_out_address of a voting registration.",id:"get-the-tx_id-tx_block_id-tx_out_address-of-a-voting-registration",level:3},{value:"Get the amount delegated by epoch for a specified address",id:"get-the-amount-delegated-by-epoch-for-a-specified-address",level:3},{value:"Get all reward account deposits",id:"get-all-reward-account-deposits",level:3},{value:"Get historical UTxO set for a given timestamp",id:"get-historical-utxo-set-for-a-given-timestamp",level:3},{value:"Get tagged Genesis addresses",id:"get-tagged-genesis-addresses",level:3},{value:"Get Ada in UTxO locked by scripts",id:"get-ada-in-utxo-locked-by-scripts",level:3},{value:"Get information about script tx&#39;s",id:"get-information-about-script-txs",level:3},{value:"Get the sum of collatereal input lost",id:"get-the-sum-of-collatereal-input-lost",level:3},{value:"Get all uses of a spend script and how much ada it unlocked from an output",id:"get-all-uses-of-a-spend-script-and-how-much-ada-it-unlocked-from-an-output",level:3},{value:"Get all mint scripts",id:"get-all-mint-scripts",level:3},{value:"Get all assets with quantities and count of mints",id:"get-all-assets-with-quantities-and-count-of-mints",level:3},{value:"Get blocks with 0 transactions and the pools that forged it",id:"get-blocks-with-0-transactions-and-the-pools-that-forged-it",level:3},{value:"Query all delegators and some basic info",id:"query-all-delegators-and-some-basic-info",level:3},{value:"Find all incorrect entries in <code>epoch</code> table",id:"find-all-incorrect-entries-in-epoch-table",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"interesting-sql-queries",children:"Interesting SQL queries"}),"\n",(0,s.jsxs)(n.p,{children:["The following is a set of example SQL queries that can be run against the ",(0,s.jsx)(n.code,{children:"db-sync"})," database."]}),"\n",(0,s.jsxs)(n.p,{children:["These queries are run using the ",(0,s.jsx)(n.code,{children:"psql"})," executable distributed with PostgreSQL. Connecting to the\ndatabase can be done from the ",(0,s.jsx)(n.code,{children:"cardano-db-sync"})," git checkout using:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"PGPASSFILE=config/pgpass-mainnet psql cexplorer\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Some of these queries have Haskell/Esqueleto equivalents in the file ",(0,s.jsx)(n.a,{href:"https://github.com/IntersectMBO/cardano-db-sync/blob/master/cardano-db/src/Cardano/Db/Query.hs",children:"Query.hs"})," and where\nthey exist, the names of those queries will be included in parentheses."]}),"\n",(0,s.jsxs)(n.h3,{id:"chain-meta-data-querymeta",children:["Chain meta data (",(0,s.jsx)(n.code,{children:"queryMeta"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from meta ;\n id |     start_time      | network_name\n----+---------------------+--------------\n  1 | 2017-09-23 21:44:51 | mainnet\n(1 row)\n\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"current-total-on-chain-supply-of-ada-querytotalsupply",children:["Current total on-chain supply of Ada (",(0,s.jsx)(n.code,{children:"queryTotalSupply"}),")"]}),"\n",(0,s.jsx)(n.p,{children:"Note: 1 ADA == 1,000,000 Lovelace"}),"\n",(0,s.jsx)(n.p,{children:"This just queries the UTxO set for unspent transaction outputs. It does not include staking rewards\nthat have have not yet been withdrawn. Before being withdrawn rewards exist in ledger state and not\non-chain."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select sum (value) / 1000000 as current_supply from tx_out as tx_outer where\n    not exists\n      ( select tx_out.id from tx_out inner join tx_in\n          on tx_out.tx_id = tx_in.tx_out_id and tx_out.index = tx_in.tx_out_index\n          where tx_outer.id = tx_out.id\n      ) ;\n    current_supply\n----------------------\n 31112120630.27526800\n\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"slot-number-of-the-most-recent-block-querylatestslotno",children:["Slot number of the most recent block (",(0,s.jsx)(n.code,{children:"queryLatestSlotNo"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select slot_no from block where block_no is not null\n    order by block_no desc limit 1 ;\n slot_no\n---------\n 4011090\n(1 row)\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"size-of-the-cexplorer-database",children:"Size of the cexplorer database"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select pg_size_pretty (pg_database_size ('cexplorer'));\n pg_size_pretty\n----------------\n 116 GB\n(1 row)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"size-of-the-cexplorer-database-table",children:"Size of the cexplorer database table"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select pg_size_pretty (pg_total_relation_size ('block'));\n pg_size_pretty\n----------------\n 2760 MB\n(1 row)\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"sync-progress-of-db-sync",children:["Sync progress of ",(0,s.jsx)(n.code,{children:"db-sync"})]}),"\n",(0,s.jsx)(n.p,{children:"To get a rough estimate of how close to fully synced the database is, we can use the time stamps on\nthe blocks as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select\n   100 * (extract (epoch from (max (time) at time zone 'UTC')) - extract (epoch from (min (time) at time zone 'UTC')))\n      / (extract (epoch from (now () at time zone 'UTC')) - extract (epoch from (min (time) at time zone 'UTC')))\n  as sync_percent\n  from block ;\n   sync_percent\n------------------\n 97.4357948804029\n(1 row)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: The value returned by this query can be rather misleading as it operates on block time stamps\nand early epochs contain much less data (eg Byron era did not have staking) and much fewer\ntransactions."}),"\n",(0,s.jsxs)(n.p,{children:["To find out how far behind ",(0,s.jsx)(n.code,{children:"db-sync"})," is:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select now () - max (time) as behind_by from block ;\n       behind_by\n------------------------\n 4 days 20:59:39.134497\n(1 row)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"current-valid-pools",children:"Current valid pools"}),"\n",(0,s.jsx)(n.p,{children:"In general the database is operated on in an append only manner. Pool certificates can\nbe updated so that later certificates override earlier ones. In addition pools can\nretire. Therefore to get the latest pool registration for every pool that is still\nvalid:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from pool_update\n    where registered_tx_id in (select max(registered_tx_id) from pool_update group by hash_id)\n    and not exists\n      ( select * from pool_retire where pool_retire.hash_id = pool_update.hash_id\n          and pool_retire.retiring_epoch <= (select max (epoch_no) from block)\n      ) ;\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"To include the pool hash in the query output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select * from pool_update inner join pool_hash on pool_update.hash_id = pool_hash.id\n    where registered_tx_id in (select max(registered_tx_id) from pool_update group by hash_id)\n    and not exists\n      ( select * from pool_retire where pool_retire.hash_id = pool_update.hash_id\n          and pool_retire.retiring_epoch <= (select max (epoch_no) from block)\n          ) ;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-the-stake-address-for-a-given-shelley-address",children:"Get the stake address for a given Shelley address:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select stake_address.id as stake_address_id, tx_out.address, stake_address.view as stake_address\n\tfrom tx_out inner join stake_address on tx_out.stake_address_id = stake_address.id\n\twhere address = 'addr1qx2kd28nq8ac5pr...08ly3tu9sy0f4qd' ;\n stake_address_id |         address                      |           stake_address\n------------------+--------------------------------------+-------------------------------------\n               42 | addr1qx2kd28nq8ac5p...8ly3tu9sy0f4qd | stake1u9ylzsgxaa6xct...nljg47zctvm3rc\n"})}),"\n",(0,s.jsx)(n.h3,{id:"transaction-fee-for-specified-transaction-hash",children:"Transaction fee for specified transaction hash:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select tx.id, tx.fee from tx\n    where tx.hash = '\\xf9c0997afc8159dbe0568eadf0823112e0cc29cd097c8dc939ff44c372388bc0' ;\n   id    |  fee\n---------+--------\n 1000000 | 172433\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"transaction-outputs-for-specified-transaction-hash",children:"Transaction outputs for specified transaction hash:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select tx_out.* from tx_out inner join tx on tx_out.tx_id = tx.id\n    where tx.hash = '\\xf9c0997afc8159dbe0568eadf0823112e0cc29cd097c8dc939ff44c372388bc0' ;\n   id    |  tx_id  | index |         address         |    value     |        address_raw        | payment_cred\n---------+---------+-------+-------------------------+--------------+---------------------------+--------------\n 2205593 | 1000000 |     1 | DdzFFzCqrh...u6v9fWDrML | 149693067531 | \\x82d8185842...1a20a42e6f |\n 2205592 | 1000000 |     0 | DdzFFzCqrh...DoV2nEACWf |   8991998000 | \\x82d8185842...1a150033dc |\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"transaction-inputs-for-specified-transaction-hash",children:"Transaction inputs for specified transaction hash:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select tx_out.* from tx_out\n    inner join tx_in on tx_out.tx_id = tx_in.tx_out_id\n    inner join tx on tx.id = tx_in.tx_in_id and tx_in.tx_out_index = tx_out.index\n    where tx.hash = '\\xf9c0997afc8159dbe0568eadf0823112e0cc29cd097c8dc939ff44c372388bc0' ;\n   id    | tx_id  | index |        address          |    value     |        address_raw        | payment_cred\n---------+--------+-------+-------------------------+--------------+---------------------------+--------------\n 2195714 | 996126 |     4 | DdzFFzCqrh...dtq1FQQSCN | 158685237964 | \\x82d8185842...1a330b42df |\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-per-epoch-performance-statistics-sync-time-tx-count-etc",children:"Get per epoch performance statistics (sync time, tx count, etc):"}),"\n",(0,s.jsx)(n.p,{children:"There are many ways this query can be written, but this is the one which so far has the best\nperformance (runs in a little over 10 minutes at epoch 270):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select epoch_no, max (sync_secs) as sync_secs, sum (tx_count) as tx_count, sum (sum_tx_size) as sum_tx_size,\n    sum (reward_count) as reward_count, sum (stake_count) as stake_count\n  from (\n    select earned_epoch as epoch_no, 0 as sync_secs, 0 as tx_count, 0 as sum_tx_size, count (reward) as reward_count,\n        0 as stake_count from reward group by earned_epoch\n    union\n    select epoch_no, 0 as sync_secs, 0 as tx_count, 0 as sum_tx_size, 0 as reward_count,\n        count (epoch_stake) as stake_count from epoch_stake group by epoch_no\n    union\n    select epoch_no, 0 as sync_secs, count (tx) as tx_count, sum (tx.size) as tx_sum_size, 0 as reward_count,\n        0 as stake_count\n      from block inner join tx on tx.block_id = block.id\n      where epoch_no is not null\n      group by epoch_no\n    union\n    select no as epoch_no, seconds, 0 as tx_count, 0 as tx_sum_size, 0 as reward_count,\n        0 as stake_count\n      from epoch_sync_time\n  )\n  as derived_table group by epoch_no ;\n\n epoch_no |   sync_secs    | tx_count | sum_tx_size | reward_count | stake_count\n----------+----------------+----------+-------------+--------------+-------------\n        0 |              0 |       33 |        6093 |            0 |           0\n        1 |   28.256384637 |    12870 |     2256995 |            0 |           0\n        2 |   19.462634986 |     4292 |      830307 |            0 |           0\n        3 |   18.302536512 |     3293 |      658490 |            0 |           0\n...\n      209 |  177.122253524 |    36916 |    19098427 |            0 |           0\n      210 |  188.630659101 |    36267 |    19694637 |            0 |       17305\n      211 |  160.841826393 |    29083 |    16330473 |        17988 |       24252\n      212 |  146.277991679 |    24691 |    13503603 |        24421 |       30628\n...\n      268 | 3491.985000071 |   208164 |   127281166 |       527806 |      557805\n      269 | 3234.034316171 |   197254 |   118772706 |            0 |      577352\n      270 |              0 |   120754 |    70076543 |            0 |      595592\n(271 rows)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"transaction-withdrawals-for-specified-transaction-hash",children:"Transaction withdrawals for specified transaction hash:"}),"\n",(0,s.jsx)(n.p,{children:"Withdrawals are a feature of some transactions of the Shelley era and later."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select withdrawal.* from withdrawal\n    inner join tx on withdrawal.tx_id = tx.id\n    where tx.hash = '\\x0b8c5be678209bb051a02904dd18896a929f9aca8aecd48850939a590175f7e8' ;\n  id   | addr_id |  amount   |  tx_id\n-------+---------+-----------+---------\n 27684 |   30399 | 154619825 | 2788211\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-the-stake-distribution-for-each-pool-for-a-given-epoch",children:"Get the stake distribution for each pool for a given epoch:"}),"\n",(0,s.jsx)(n.p,{children:"Simplest query is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select pool_id, sum (amount) from epoch_stake\n    where epoch_no = 216 group by pool_id ;\n\n pool_id |       sum\n---------+-----------------\n       1 |  25326935163066\n       2 | 112825285842751\n...\n    1172 |       498620686\n    1173 |     15024987189\n(1114 rows)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Or, to use the Bech32 pool identifier instead of the Postgres generated ",(0,s.jsx)(n.code,{children:"pool_id"})," field:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select pool_hash.view, sum (amount) as lovelace from epoch_stake\n    inner join pool_hash on epoch_stake.pool_id = pool_hash.id\n    where epoch_no = 216 group by pool_hash.id ;\n                           view                           |    lovelace\n----------------------------------------------------------+-----------------\n pool10p6wd9k0fwk2zqkqnqr8efyr7gms627ujk9dxgk6majskhawr6r |    789466838780\n pool1vvh72z8dktfy2x965w0yp5psmnyv3845pmm37nerhl6jk6m2njw |   1427697660218\n...\n pool1tq03j8aa5myedlr8xj6tltstdsn5eprxq4cd4qr54mhv25unsyk |     50297430457\n pool1nux6acnlx0du7ss9fhg2phjlaqe87l4wcurln5r6f0k8xreluez |   5401615743207\n(1114 rows)\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-the-delegation-history-for-a-specified-stake-address",children:"Get the delegation history for a specified stake address"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select delegation.active_epoch_no, pool_hash.view from delegation\n    inner join stake_address on delegation.addr_id = stake_address.id\n    inner join pool_hash on delegation.pool_hash_id = pool_hash.id\n    where stake_address.view = 'stake1u8gsndukzghdukmqdsd7r7wd6kvamvjv2pzcgag8v6jd69qfqyl5h'\n    order by active_epoch_no asc;\n active_epoch_no |                           view\n-----------------+----------------------------------------------------------\n             212 | pool1hwlghkwnjsjk8370qt3dvp23d7urwm36f95fmxcz3np2kghknj9\n             214 | pool1xxhs2zw5xa4g54d5p62j46nlqzwp8jklqvuv2agjlapwjx9qkg9\n             216 | pool1hwlghkwnjsjk8370qt3dvp23d7urwm36f95fmxcz3np2kghknj9\n             217 | pool15yyxtkhz64p7a8cnax9l7u82s9t9hdhyxsa3tdm977qhgpnsuhq\n(4 rows)\n"})}),"\n",(0,s.jsx)(n.p,{children:"This shows that the first delegation became active (ie earning rewards) in epoch 212 and that the\naddress owner subsequently re-delegated their stake with those re-delegations becoming active in\nepochs 214, 216 and 217."}),"\n",(0,s.jsx)(n.h3,{id:"get-the-reward-history-for-a-specified-stake-address",children:"Get the reward history for a specified stake address"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select reward.earned_epoch, pool_hash.view as delegated_pool, reward.amount as lovelace\n    from reward inner join stake_address on reward.addr_id = stake_address.id\n    inner join pool_hash on reward.pool_id = pool_hash.id\n    where stake_address.view = 'stake1u8gsndukzghdukmqdsd7r7wd6kvamvjv2pzcgag8v6jd69qfqyl5h'\n    order by earned_epoch asc ;\n epoch_no |                      delegated_pool                      | lovelace\n----------+----------------------------------------------------------+----------\n      212 | pool1hwlghkwnjsjk8370qt3dvp23d7urwm36f95fmxcz3np2kghknj9 |  2953284\n      213 | pool1hwlghkwnjsjk8370qt3dvp23d7urwm36f95fmxcz3np2kghknj9 |  3333940\n      214 | pool1xxhs2zw5xa4g54d5p62j46nlqzwp8jklqvuv2agjlapwjx9qkg9 |  3005843\n      215 | pool1xxhs2zw5xa4g54d5p62j46nlqzwp8jklqvuv2agjlapwjx9qkg9 |  3552293\n      216 | pool1hwlghkwnjsjk8370qt3dvp23d7urwm36f95fmxcz3np2kghknj9 |  3130673\n      217 | pool15yyxtkhz64p7a8cnax9l7u82s9t9hdhyxsa3tdm977qhgpnsuhq | 34339994\n      218 | pool15yyxtkhz64p7a8cnax9l7u82s9t9hdhyxsa3tdm977qhgpnsuhq | 30384189\n      219 | pool15yyxtkhz64p7a8cnax9l7u82s9t9hdhyxsa3tdm977qhgpnsuhq | 27293239\n      220 | pool15yyxtkhz64p7a8cnax9l7u82s9t9hdhyxsa3tdm977qhgpnsuhq | 36947267\n      221 | pool15yyxtkhz64p7a8cnax9l7u82s9t9hdhyxsa3tdm977qhgpnsuhq | 27016952\n(10 rows)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-the-block-number-of-blocks-created-in-an-epoch-by-a-specified-pool",children:"Get the block number of blocks created in an epoch by a specified pool"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select block.block_no, block.epoch_no, pool_hash.view as pool_view\n    from block inner join slot_leader on block.slot_leader_id = slot_leader.id\n    inner join pool_hash on slot_leader.pool_hash_id = pool_hash.id\n    where block.epoch_no = 220\n    and pool_hash.view = 'pool137x32lrkprphrd0aa8x4jqz98z6lc0wawlc88hdjeps4qe408ad' ;\n block_no | epoch_no |                        pool_view\n----------+----------+----------------------------------------------------------\n  4760198 |      220 | pool137x32lrkprphrd0aa8x4jqz98z6lc0wawlc88hdjeps4qe408ad\n  4759847 |      220 | pool137x32lrkprphrd0aa8x4jqz98z6lc0wawlc88hdjeps4qe408ad\n(2 rows)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-the-number-of-blocks-created-by-a-specified-pool-for-each-epoch",children:"Get the number of blocks created by a specified pool for each epoch"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select block.epoch_no, count (*) as block_count\n    from block inner join slot_leader on block.slot_leader_id = slot_leader.id\n    inner join pool_hash on slot_leader.pool_hash_id = pool_hash.id\n    where pool_hash.view = 'pool1nux6acnlx0du7ss9fhg2phjlaqe87l4wcurln5r6f0k8xreluez'\n    group by block.epoch_no, pool_hash.view ;\n epoch_no | block_count\n----------+-------------\n      212 |           1\n      213 |           2\n      214 |           2\n      215 |           4\n....\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-the-tx_id-tx_block_id-tx_out_address-of-a-voting-registration",children:"Get the tx_id, tx_block_id, tx_out_address of a voting registration."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select tx.id as tx_id, tx.block_id as tx_block_id, tx_out.address as tx_out_address\n    from tx inner join tx_out on tx.id = tx_out.tx_id\n    where tx.hash = '\\x9053a4cf0c6c9fb29792c78e688c5915a02909d0073371d8fff1abba0bed3065';\n  tx_id  | tx_block_id |                       tx_out_address\n---------+-------------+------------------------------------------------------------\n 3192730 |     5083822 | addr1vy6d0htdaa9k8du2262p2ju74s25g6rjyjsc9x2fky9r6jq402r08\n....\n"})}),"\n",(0,s.jsx)(n.p,{children:"to find your transaction hash of your voter registration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"cardano-cli transaction txid --tx-file metadata.txsigned\n9053a4cf0c6c9fb29792c78e688c5915a02909d0073371d8fff1abba0bed3065\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-the-amount-delegated-by-epoch-for-a-specified-address",children:"Get the amount delegated by epoch for a specified address"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select stake_address.view as stake_address, epoch_stake.epoch_no, epoch_stake.amount\n    from stake_address inner join epoch_stake on stake_address.id = epoch_stake.addr_id\n    where stake_address.view = 'stake1u8mt5gqclkq0swmvzx9lvq4jgwsnx9yh030yrxwqwllu0mq2m0l4n' ;\n                        stake_address                        | epoch_no |   amount\n-------------------------------------------------------------+----------+-------------\n stake1u8mt5gqclkq0swmvzx9lvq4jgwsnx9yh030yrxwqwllu0mq2m0l4n |      211 |  1561003730\n stake1u8mt5gqclkq0swmvzx9lvq4jgwsnx9yh030yrxwqwllu0mq2m0l4n |      212 |  1561003730\n...\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-all-reward-account-deposits",children:"Get all reward account deposits"}),"\n",(0,s.jsxs)(n.p,{children:["Reward payments can come from two places; staking rewards which are in the ",(0,s.jsx)(n.code,{children:"reward"})," table and payments\nfrom the treasury. These can be coalesced into single query via an SQL ",(0,s.jsx)(n.code,{children:"union"})," operations:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select addr_id, amount, NULL as reward_epoch_no, tx_id as treasury_tx_id from treasury\n    union\n    select addr_id, amount, earned_epoch as reward_epoch_no, NULL as treasury_tx_id from reward ;\n addr_id |    amount     | reward_epoch_no | treasury_tx_id\n---------+---------------+-----------------+----------------\n       3 |       1071786 |             216 |\n       3 |       1148596 |             212 |\n       3 |       1363094 |             215 |\n       3 |       1527849 |             214 |\n       3 |       2336874 |                 |        3557307\n       3 |       2439495 |             213 |\n       3 |       3204796 |             241 |\n       3 |       3518828 |             221 |\n...\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-historical-utxo-set-for-a-given-timestamp",children:"Get historical UTxO set for a given timestamp"}),"\n",(0,s.jsx)(n.p,{children:"The UTxO set is dependent on time, this will return it for a given timestamp"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"# with const as (select to_timestamp ('2020-10-10 17:00:00', 'YYYY-MM-DD HH24:MI:SS') as effective_time_)\n  select tx_out.address as address, tx_out.value as lovelace, generating_block.time as timestamp\n    from const\n    cross join tx_out\n    inner join tx as generating_tx on generating_tx.id = tx_out.tx_id\n    inner join block as generating_block on generating_block.id = generating_tx.block_id\n    left join tx_in as consuming_input on consuming_input.tx_out_id = generating_tx.id\n      and consuming_input.tx_out_index = tx_out.index\n    left join tx as consuming_tx on consuming_tx.id = consuming_input.tx_in_id\n    left join block as consuming_block on consuming_block.id = consuming_tx.block_id\n    where ( -- Ommit outputs from genesis after Allegra hard fork\n\t\t\tconst.effective_time_ < '2020-12-16 21:44:00'\n\t\t\tor generating_block.epoch_no is not null\n\t\t\t)\n      and const.effective_time_ >= generating_block.time -- Only outputs from blocks generated in the past\n      and ( -- Only outputs consumed in the future or unconsumed outputs\n\t\tconst.effective_time_ <= consuming_block.time or consuming_input.id IS NULL\n\t\t) ;\n\n                           address                           |   lovelace    |      timestamp\n-------------------------------------------------------------+---------------+---------------------\n Ae2tdPwUPEZFdcW8MaYNxoJJkKmkSwJD5D4AdJPBLLn7PCVMenKMvwtWV8K |       1000000 | 2017-09-23 21:44:51\n Ae2tdPwUPEZ1pRs1gSidtoRGMpJR54UyNrdVDMFxXu2pBkhxitAWhqrGqd9 |  715399000000 | 2017-09-23 21:44:51\n Ae2tdPwUPEZJn5QH1xKqNFmtEfvBXFHJ5RacD1xtR9kcvndvebirJHG7Sam |  380723000000 | 2017-09-23 21:44:51\n Ae2tdPwUPEZBZRPzrsCvbaG3HH89AUtAkBwjeR4pC2WZvXYZ4Ab7J7JNpLz |  469809000000 | 2017-09-23 21:44:51\n Ae2tdPwUPEYyvoxws84ogrBf7CqRjiGaqP6yKeb2gsLZaKPaDWKdxiQn1Pm | 1838066000000 | 2017-09-23 21:44:51\n...\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-tagged-genesis-addresses",children:"Get tagged Genesis addresses"}),"\n",(0,s.jsx)(n.p,{children:"The genesis block contains multiple addresses, this query will tag them with their origin."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select\n    genesis_output.address as address,\n    floor (genesis_output.value / 1000000) as ada,\n    redemption_block.time as redeemed_at,\n    cast ((case\n\t\t\t  when genesis_output.value = 1000000 then 'Test Ada'\n\t\t      when genesis_output.address in (\n\t\t\t\t'Ae2tdPwUPEZKQuZh2UndEoTKEakMYHGNjJVYmNZgJk2qqgHouxDsA5oT83n',\n\t\t\t\t'Ae2tdPwUPEZGcVv9qJ3KSTx5wk3dHKNn6G3a3eshzqX2y3N9LzL3ZTBEApq',\n\t\t\t\t'Ae2tdPwUPEZ9dH9VC4iVXZRNYe5HGc73AKVMYHExpgYBmDMkgCUgnJGqqqq'\n\t\t\t\t) then 'Development Pool'\n\t\t\t  else 'Pre-Sale'\n\t\t\t  end) as varchar) as origin\n    from block as genesis_block\n    inner join tx as genesis_tx on genesis_tx.block_id = genesis_block.id\n    inner join tx_out as genesis_output on genesis_output.tx_id = genesis_tx.id\n    left join tx_in as redemption_input on redemption_input.tx_out_id = genesis_tx.id\n    left join tx as redemption_tx on redemption_tx.id = redemption_input.tx_in_id\n    left join block as redemption_block on redemption_block.id = redemption_tx.block_id\n    where genesis_block.epoch_no is null ;\n\n                           address                           |    ada     |     redeemed_at     |      origin\n-------------------------------------------------------------+------------+---------------------+------------------\n Ae2tdPwUPEZJkVfTW9cFmxAxsp1WtgV4hde53p5eLccUUFzQu8amyrLHcTL |     385509 | 2017-11-19 06:36:11 | Pre-Sale\n Ae2tdPwUPEZM65iaQ1jYtgmtTSvjrcPXfXcFBineY27wYot6t2ToY8FqkXu |    1923076 | 2017-09-30 16:40:31 | Pre-Sale\n Ae2tdPwUPEZMeLeeSL9Lq2Kr3UhBt1a23KhCMqFWvjYGXxGjkvV9giSQAeH |     832476 | 2017-09-29 07:47:31 | Pre-Sale\n Ae2tdPwUPEYwQuL8cXMVstbEUvfdxwWpjepjKTD9BYQbcXJG8BdLjEpuD8Y |     409116 | 2017-10-08 06:27:31 | Pre-Sale\n Ae2tdPwUPEZApyHh2AfjfSyCRYhwDLoWo91WvmjE9fQKo6VB9BjWk6N7eXv |     384615 | 2017-09-30 03:58:51 | Pre-Sale\n...\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-ada-in-utxo-locked-by-scripts",children:"Get Ada in UTxO locked by scripts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select sum (value) / 1000000 as script_locked from tx_out as tx_outer where\n    tx_outer.address_has_script = true and\n    not exists\n      ( select tx_out.id from tx_out inner join tx_in\n          on tx_out.tx_id = tx_in.tx_out_id and tx_out.index = tx_in.tx_out_index\n          where tx_outer.id = tx_out.id\n      ) ;\n    script_locked\n----------------------\n 3695300.068246000000\n(1 row)\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-information-about-script-txs",children:"Get information about script tx's"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select tx.id as tx_id, tx.fee as fees, SUM(redeemer.fee) as script_fees, SUM(redeemer.unit_mem) as unit_mem,\n       SUM (redeemer.unit_steps) as unit_steps, tx.valid_contract as valid, count(redeemer.id) scripts, tx.script_size\n       from tx join redeemer on tx.id = redeemer.tx_id group by tx.id;\n tx_id | fees     |script_fees |unit_mem  |unit_steps | valid|scripts|script_size\n ------+----------+------------+----------+-----------+------+-------+-----------\n 11812 |200193089 |  200000000 | 100000000|  100000000| t    |      1|         92\n 11909 |  5000000 |    4000000 |   2000000|    2000000| f    |      1|        565\n 11931 |  5000000 |    4000000 |   2000000|    2000000| f    |      1|         92\n 11983 |255089500 |  204089500 |     39500|  204050000| t    |      1|         92\n 11987 |102635800 |   81635800 |     15800|   81620000| t    |      1|         92\n 11992 |102635800 |   81635800 |     15800|   81620000| t    |      1|         92\n 12004 |822865300 |  791865300 |    195300|  791670000| t    |      1|       4559\n 12010 |822865300 |  791865300 |    195300|  791670000| t    |      1|       4559\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-the-sum-of-collatereal-input-lost",children:"Get the sum of collatereal input lost"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select SUM(value)/1000000 as lost_amount\n  from tx\n  join tx_in on tx.id = tx_in.tx_in_id\n  join tx_out on tx_in.tx_out_id = tx_out.id\n    where tx.valid_contract = false ;\n  lost_amount\n--------------------\n 592003625.28471400\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-all-uses-of-a-spend-script-and-how-much-ada-it-unlocked-from-an-output",children:"Get all uses of a spend script and how much ada it unlocked from an output"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select tx.id as tx_id, tx_out.value as tx_out_value, redeemer.unit_mem, redeemer.unit_steps, redeemer.fee, redeemer.purpose\n  from tx join redeemer on redeemer.tx_id = tx.id\n  join tx_in on tx_in.redeemer_id = redeemer.id\n  join tx_out on tx_in.tx_out_id = tx_out.tx_id and tx_in.tx_out_index = tx_out.index\n    where redeemer.script_hash = '\\x8a08f851b22e5c54de087be307eeab3b5c8588a8cea8319867c786e0';\n tx_id | tx_out_value |  unit_mem   | unit_steps  |    fee     | purpose\n-------+--------------+-------------+-------------+------------+---------\n 10184 |    200000000 |    70000000 |    70000000 |  140000000 | spend\n 11680 |   1000000000 |   700000000 |   700000000 | 1400000000 | spend\n 11812 |    512000000 |   100000000 |   100000000 |  200000000 | spend\n 11983 |    300000000 |       39500 |   204050000 |  204089500 | spend\n 11987 |    200000000 |       15800 |    81620000 |   81635800 | spend\n 11992 |    120000000 |       15800 |    81620000 |   81635800 | spend\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-all-mint-scripts",children:"Get all mint scripts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select redeemer.tx_id as tx_id, redeemer.unit_mem, redeemer.unit_steps, redeemer.fee as redeemer_fee, redeemer.purpose, multi_asset.policy, multi_asset.name, ma_tx_mint.quantity\n  from redeemer\n    join multi_asset on redeemer.script_hash = multi_asset.policy\n    join ma_tx_mint on ma_tx_mint.ident = multi_asset.id and redeemer.tx_id = ma_tx_mint.tx_id\n      where purpose = 'mint';\n tx_id  | unit_mem | unit_steps | redeemer_fee | purpose |                           policy                           |           name           | quantity\n--------+----------+------------+--------------+---------+------------------------------------------------------------+--------------------------+----------\n 572051 |   994524 |  365737701 |        83754 | mint    | \\xfda1b6b487bee2e7f64ecf24d24b1224342484c0195ee1b7b943db50 | \\x506c75747573436f696e   |      100\n 572074 |   994524 |  365737701 |        83754 | mint    | \\xfda1b6b487bee2e7f64ecf24d24b1224342484c0195ee1b7b943db50 | \\x506c75747573436f696e32 |      100\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-all-assets-with-quantities-and-count-of-mints",children:"Get all assets with quantities and count of mints"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:' SELECT\n    multi_asset.fingerprint,\n    multi_asset.policy,\n    multi_asset.name,\n    a.ident,\n    a.cnt mints,\n    a.quantity,\n    block."time" AS created\n   FROM ( SELECT ma_tx_mint.ident,\n            sum(ma_tx_mint.quantity::numeric) AS quantity,\n            count(*) AS cnt,\n            min(ma_tx_mint.tx_id) AS mtx\n           FROM ma_tx_mint\n          GROUP BY ma_tx_mint.ident) a\n     LEFT JOIN multi_asset ON multi_asset.id = a.ident\n     LEFT JOIN tx ON tx.id = a.mtx\n     LEFT JOIN block ON block.id = tx.block_id;\n                      fingerprint                  |                           policy                           |       name       | ident | mints |    quantity    |       created\n----------------------------------------------+------------------------------------------------------------+------------------+-------+-------+----------------+---------------------\n asset1jtqefvdycrenq2ly6ct8rwcu5e58va432vj586 | \\x476039a0949cf0b22f6a800f56780184c44533887ca6e821007840c3 | \\x6e7574636f696e |     1 |     1 |              1 | 2021-02-03 20:20:46\n asset1mu7h997yyvzrppdwjzhpex6u7khrucspxvjjuw | \\x69b30e43bc5401bb34d0b12bd06cd9b537f33065aa49df7e8652739d | \\x4c51           |     2 |     1 | 21000000000000 | 2021-02-03 20:22:23\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"get-blocks-with-0-transactions-and-the-pools-that-forged-it",children:"Get blocks with 0 transactions and the pools that forged it"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"select distinct on(block.hash) block.hash as block_hash , epoch_no, tx_count, pool_hash.hash_raw as pool_hash,\n                               pool_update.pledge, pool_update.active_epoch_no, pool_metadata_ref.url, offchain_pool_data.ticker_name\n  from block join slot_leader on block.slot_leader_id = slot_leader.id\n    join pool_hash on slot_leader.pool_hash_id = pool_hash.id\n    join pool_update on pool_update.hash_id = pool_hash.id\n    left join pool_metadata_ref on pool_update.meta_id = pool_metadata_ref.id\n    left join offchain_pool_data on offchain_pool_data.pmr_id = pool_metadata_ref.id\n  where tx_count = 0 and epoch_no > 150\n  order by block.hash, pool_update.active_epoch_no desc;\n\n\n                             block_hash                             | epoch_no | tx_count |                         pool_hash                          |     pledge      | active_epoch_no |                               url                                | ticker_name\n--------------------------------------------------------------------+----------+----------+------------------------------------------------------------+-----------------+-----------------+------------------------------------------------------------------+-------------\n \\x0000f4b44d1484d7280f087c1df94f068a02e23570e8ed9eb5c0dd980d4c46c1 |      165 |        0 | \\xe402f5894b8a7073f198bb0710d6294f2ac354ede2577b5ce15159a4 |     50000000000 |             137 | https://www.canadastakes.ca/metadata/can1-testnet-metadata.json  |\n \\x0001715520d185accd550c7b6c0811a2589e778e6408ffcd75b0f83f4f45c2c0 |      153 |        0 | \\xacfd479740bde8289885694e69e3494f7dcbcfdca540aead48c5d653 |  64000000000000 |             100 |                                                                  |\n \\x00044646beb7d24dce8cd74408c76b9816453a451fc030c42cc9961be55932d9 |      163 |        0 | \\x1e2191487bed3de4bf440d5ff80bdae31d7f22798d3a93444302acb3 |  64000000000000 |             100 |                                                                  |\n \\x000732a2f62e289930c2779559a975566395dcf0cf32130f3852a6e031d13d61 |      154 |        0 | \\xd9dc497e633c2f1c665467e1ed7a93e4f8541bfbabe1cc31818fb20f |   1000000000000 |             131 | https://www.uniquestaking.com/pool/uniq9/1ecf39ad-4f3c-4043      |\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"query-all-delegators-and-some-basic-info",children:"Query all delegators and some basic info"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:' SELECT sa.view AS address,\n    nh.view AS delegated_now_poolid,\n    d.active_epoch_no delegated_now_epoch,\n    oh.view AS delegated_before_poolid,\n    od.active_epoch_no AS delegated_before_epoch,\n    d.addr_id,\n    br."time" AS stake_key_registered\n   FROM ( SELECT max(delegation.id) AS id\n           FROM delegation\n          GROUP BY delegation.addr_id) a\n     LEFT JOIN delegation d ON d.id = a.id\n     LEFT JOIN tx txn ON txn.id = d.tx_id\n     LEFT JOIN block bn ON bn.id = txn.block_id\n     LEFT JOIN stake_address sa ON sa.id = d.addr_id\n     LEFT JOIN stake_deregistration de ON de.addr_id = d.addr_id AND de.id = (( SELECT max(stake_deregistration.id) AS max\n           FROM stake_deregistration\n          WHERE stake_deregistration.addr_id = d.addr_id))\n     LEFT JOIN stake_registration re ON re.addr_id = d.addr_id AND re.id = (( SELECT max(stake_registration.id) AS max\n           FROM stake_registration\n          WHERE stake_registration.addr_id = d.addr_id))\n     LEFT JOIN delegation od ON od.addr_id = d.addr_id AND od.id = (( SELECT max(delegation.id) AS max\n           FROM delegation\n          WHERE delegation.addr_id = d.addr_id AND NOT delegation.pool_hash_id = d.pool_hash_id))\n     LEFT JOIN tx txo ON txo.id = od.tx_id\n     LEFT JOIN block bo ON bo.id = txo.block_id\n     LEFT JOIN pool_hash nh ON nh.id = d.pool_hash_id\n     LEFT JOIN pool_hash oh ON oh.id = od.pool_hash_id\n     LEFT JOIN tx txr ON txr.id = re.tx_id\n     LEFT JOIN block br ON br.id = txr.block_id\n  WHERE (de.tx_id < re.tx_id OR de.* IS NULL);\n\n\n                           address                           |                   delegated_now_poolid                   | delegated_now_epoch |                 delegated_before_poolid                  | delegated_before_epoch | addr_id | stake_key_registered\n-------------------------------------------------------------+----------------------------------------------------------+---------------------+----------------------------------------------------------+------------------------+---------+----------------------\n stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc | pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy |                 210 |                                                          |                        |       1 | 2020-07-29 22:41:31\n stake1u8mt5gqclkq0swmvzx9lvq4jgwsnx9yh030yrxwqwllu0mq2m0l4n | pool1qqqqzyqf8mlm70883zht60n4q6uqxg4a8x266sewv8ad2grkztl |                 317 | pool1qqqz9vlskay2gv3ec5pyck8c2tq9ty7dpfm60x8shvapguhcemt |                    211 |       3 | 2020-08-06 20:00:11\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"find-all-incorrect-entries-in-epoch-table",children:["Find all incorrect entries in ",(0,s.jsx)(n.code,{children:"epoch"})," table"]}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.a,{href:"https://github.com/IntersectMBO/cardano-db-sync/issues/1457",children:"issue #1457"})," it was pointed out\nthat some entries in the epoch table were incorrect. These incorrect entries can be found using:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"select b.epoch_no, e.epoch_blk_count, e.epoch_tx_count, b.block_block_count, b.block_tx_count\n  from\n    (select no, blk_count as epoch_blk_count, tx_count as epoch_tx_count from epoch) as e,\n    (select epoch_no, count (block_no) as block_block_count, sum (tx_count) as block_tx_count\n      from block group by epoch_no) as b\n    where e.no = b.epoch_no\n      and (e.epoch_blk_count != b.block_block_count or e.epoch_tx_count != b.block_tx_count)\n    order by b.epoch_no ;\n"})}),"\n",(0,s.jsx)(n.p,{children:"There is a shell script in the above issue which finds all incorrect rows in that table and fixes\nthem."}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var s=t(6540);const a={},o=s.createContext(a);function d(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);