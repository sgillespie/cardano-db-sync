"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[355],{6413:(n,e,l)=>{l.r(e),l.d(e,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});var s=l(4848),i=l(8453);const a={},c="Installing with Cabal",t={id:"Installation/installing",title:"Installing with Cabal",description:"Prerequisites",source:"@site/docs/Installation/installing.md",sourceDirName:"Installation",slug:"/Installation/installing",permalink:"/cardano-db-sync/Installation/installing",draft:!1,unlisted:!1,editUrl:"https://github.com/sgillespie/cardano-db-sync/tree/docs/docusaurus/doc/docusaurus/docs/Installation/installing.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Installing with Nix",permalink:"/cardano-db-sync/Installation/installing-with-nix"},next:{title:"Running",permalink:"/cardano-db-sync/running"}},r={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install Dependencies",id:"install-dependencies",level:2},{value:"Install GHC and Cabal",id:"install-ghc-and-cabal",level:3},{value:"Install Sodium",id:"install-sodium",level:3},{value:"Installing Secp256k1",id:"installing-secp256k1",level:3},{value:"Installing blst",id:"installing-blst",level:3},{value:"MACOS:",id:"macos",level:4},{value:"Install Cardano DB Sync",id:"install-cardano-db-sync",level:2},{value:"Download the Source",id:"download-the-source",level:3},{value:"Configure Build Options",id:"configure-build-options",level:3},{value:"Build and Install",id:"build-and-install",level:3}];function o(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"installing-with-cabal",children:"Installing with Cabal"}),"\n",(0,s.jsx)(e.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(e.p,{children:"This guide assumes you have the following tools:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://git-scm.com/download",children:"Git"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/IntersectMBO/cardano-node/blob/master/doc/getting-started/install.md",children:"Cardano Node"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.postgresql.org/download/",children:"Postgres Development Libraries (libpq)"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.freedesktop.org/wiki/Software/pkg-config/",children:"pkg-config"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"In addition, Cardano DB Sync requires the following software (instructions below):"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://www.haskell.org/ghcup/install/",children:"GHC"})," >= 8.10.7"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://www.haskell.org/ghcup/install/",children:"Cabal"})," >= 3.10.1.0"]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/IntersectMBO/libsodium",children:"libsodium-vrf"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/bitcoin-core/secp256k1",children:"secp256k1"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/supranational/blst",children:"blst"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"macOS:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://developer.apple.com/xcode/resources/",children:"x-code"})}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Create a working directory for your builds:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"mkdir -p ~/src\ncd ~/src\n"})}),"\n",(0,s.jsx)(e.h2,{id:"install-dependencies",children:"Install Dependencies"}),"\n",(0,s.jsx)(e.h3,{id:"install-ghc-and-cabal",children:"Install GHC and Cabal"}),"\n",(0,s.jsxs)(e.p,{children:["The recommended way to install the Haskell tools is via\n",(0,s.jsx)(e.a,{href:"https://www.haskell.org/ghcup/",children:"GHCup"}),". Check ",(0,s.jsx)(e.a,{href:"https://www.haskell.org/ghcup/install/",children:"this\npage"})," for installation instructions. Its\ninstallation script will guide you through the installation, and warn you about package\ndependencies."]}),"\n",(0,s.jsx)(e.p,{children:"Once GHCup is installed, open a new terminal (to get an updated environment) and run:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"ghcup install ghc 8.10.7\nghcup install cabal 3.10.1.0\nghcup set ghc 8.10.7\nghcup set cabal 3.10.1.0\n"})}),"\n",(0,s.jsx)(e.p,{children:"Check that you will use the GHCup tools (and not any other installation on the system):"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"which cabal\n"})}),"\n",(0,s.jsxs)(e.p,{children:["It should print a path of this shape: ",(0,s.jsx)(e.code,{children:"/home/<user>/.ghcup/bin/cabal"}),"."]}),"\n",(0,s.jsx)(e.h3,{id:"install-sodium",children:"Install Sodium"}),"\n",(0,s.jsxs)(e.p,{children:["Cardano uses a ",(0,s.jsx)(e.a,{href:"https://github.com/IntersectMBO/libsodium",children:"fork"})," of ",(0,s.jsx)(e.code,{children:"libsodium"})," which\nexposes some internal functions and adds some other new functions."]}),"\n",(0,s.jsx)(e.p,{children:"Enter a working directory for your builds:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"cd ~/src\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Take note of the latest revision from ",(0,s.jsx)(e.a,{href:"https://github.com/input-output-hk/iohk-nix",children:"iohk-nix"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'REV=$(curl -L https://github.com/input-output-hk/iohk-nix/releases/latest/download/INFO \\\n  | awk \'$1 == "debian.libsodium-vrf.deb" { rev = gensub(/.*-(.*)\\.deb/, "\\\\1", "g", $2); print rev }\')\n'})}),"\n",(0,s.jsx)(e.p,{children:"Checkout libsodium:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/IntersectMBO/libsodium\ncd libsodium\ngit checkout $REV\n"})}),"\n",(0,s.jsx)(e.p,{children:"Build and install it:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"./autogen.sh\n./configure\nmake\nmake check\nsudo make install\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Add the following to your ",(0,s.jsx)(e.code,{children:"~/.bashrc"})," file and source it (or re-open the terminal):"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"\nexport PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"\n'})}),"\n",(0,s.jsxs)(e.p,{children:["On Linux, running the ",(0,s.jsx)(e.code,{children:"ldconfig"})," command is required to make the dynamic linker aware of\nthe new library."]}),"\n",(0,s.jsx)(e.h3,{id:"installing-secp256k1",children:"Installing Secp256k1"}),"\n",(0,s.jsx)(e.p,{children:"Enter the working directory for your builds:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"cd ~/src\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Take note of the latest revision from ",(0,s.jsx)(e.a,{href:"https://github.com/input-output-hk/iohk-nix",children:"iohk-nix"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'REV=$(curl -L https://github.com/input-output-hk/iohk-nix/releases/latest/download/INFO \\\n  | awk \'$1 == "debian.libsecp256k1.deb" { rev = gensub(/.*-(.*)\\.deb/, "\\\\1", "g", $2); print rev }\')\n'})}),"\n",(0,s.jsx)(e.p,{children:"Checkout libsecp256k1:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/bitcoin-core/secp256k1\ncd secp256k1\ngit checkout $REV\n"})}),"\n",(0,s.jsx)(e.p,{children:"Build and install it:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"./autogen.sh\n./configure --enable-module-schnorrsig --enable-experimental\nmake\nmake check\nsudo make install\n"})}),"\n",(0,s.jsx)(e.h3,{id:"installing-blst",children:"Installing blst"}),"\n",(0,s.jsx)(e.p,{children:"Enter the working directory for your builds:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"cd ~/src\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Take note of the latest revision from ",(0,s.jsx)(e.a,{href:"https://github.com/input-output-hk/iohk-nix",children:"iohk-nix"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'REV=$(curl -L https://github.com/input-output-hk/iohk-nix/releases/latest/download/INFO \\\n  | awk \'$1 == "debian.libblst.deb" { rev = gensub(/.*-(.*)\\.deb/, "\\\\1", "g", $2); print rev }\')\n'})}),"\n",(0,s.jsx)(e.p,{children:"Checkout blst:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/supranational/blst\ncd blst\ngit checkout $REV\n"})}),"\n",(0,s.jsx)(e.p,{children:"Build it:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"./build.sh\n"})}),"\n",(0,s.jsx)(e.p,{children:"Install it:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"cat > libblst.pc << EOF\nprefix=/usr/local\nexec_prefix=\\${prefix}\nlibdir=\\${exec_prefix}/lib\nincludedir=\\${prefix}/include\n\nName: libblst\nDescription: Multilingual BLS12-381 signature library\nURL: https://github.com/supranational/blst\nVersion: 0.3.10\nCflags: -I\\${includedir}\nLibs: -L\\${libdir} -lblst\nEOF\n\nsudo cp libblst.pc /usr/local/lib/pkgconfig/\nsudo cp bindings/blst_aux.h bindings/blst.h bindings/blst.hpp  /usr/local/include/\nsudo cp libblst.a /usr/local/lib\nsudo chmod 644 \\\n  /usr/local/lib/libblst.* \\\n  /usr/local/include/{blst.*,blst_aux.h}\n"})}),"\n",(0,s.jsx)(e.h4,{id:"macos",children:"MACOS:"}),"\n",(0,s.jsx)(e.p,{children:"If you hit the following error on macOS:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"+ cc -O2 -fno-builtin -fPIC -Wall -Wextra -Werror -c ./src/server.c\nIn file included from ./src/server.c:7:\nIn file included from ./src/keygen.c:7:\nIn file included from ./src/consts.h:8:\n./src/vect.h:402:11: fatal error: 'stdlib.h' file not found\n# include <stdlib.h>\n"})}),"\n",(0,s.jsx)(e.p,{children:"check you have x-code command line tools installed or try install them by running:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"xcode-select --install\n"})}),"\n",(0,s.jsxs)(e.p,{children:["If you are using homebrew you might need to unistall ",(0,s.jsx)(e.code,{children:"llvm@13"})," as this clashes with x-code:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"brew uninstall llvm@13\n"})}),"\n",(0,s.jsx)(e.h2,{id:"install-cardano-db-sync",children:"Install Cardano DB Sync"}),"\n",(0,s.jsx)(e.h3,{id:"download-the-source",children:"Download the Source"}),"\n",(0,s.jsx)(e.p,{children:"Enter the working directory for your builds:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"cd ~/src\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Find the latest release here: ",(0,s.jsx)(e.a,{href:"https://github.com/IntersectMBO/cardano-db-sync/releases",children:"https://github.com/IntersectMBO/cardano-db-sync/releases"})]}),"\n",(0,s.jsx)(e.p,{children:"Check out the latest release version:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/IntersectMBO/cardano-db-sync.git\ncd cardano-db-sync\ngit fetch --all --tags\ngit checkout tags/<VERSION>\n"})}),"\n",(0,s.jsx)(e.h3,{id:"configure-build-options",children:"Configure Build Options"}),"\n",(0,s.jsx)(e.p,{children:"Explicitly set the GHC version that we installed earlier. This avoids defaulting to a\nsystem version of GHC that might be different than the one you have installed."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'echo "with-compiler: ghc-8.10.7" >> cabal.project.local\n'})}),"\n",(0,s.jsx)(e.p,{children:"macOS installs OpenSSL in a different location than expected by default. If you have\ninstalled OpenSSL via homebrew then run:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"sudo mkdir -p /usr/local/opt/openssl\nsudo ln -s /opt/homebrew/opt/openssl@3/lib /usr/local/opt/openssl/lib\nsudo ln -s /opt/homebrew/opt/openssl@3/include /usr/local/opt/openssl/include\n"})}),"\n",(0,s.jsx)(e.p,{children:"If you are on an M1 Mac, run:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'echo "package HsOpenSSL" >> cabal.project.local\necho "  flags: -homebrew-openssl" >> cabal.project.local\necho "" >> cabal.project.local\n'})}),"\n",(0,s.jsx)(e.h3,{id:"build-and-install",children:"Build and Install"}),"\n",(0,s.jsxs)(e.p,{children:["Build Cardano DB Sync with ",(0,s.jsx)(e.code,{children:"cabal"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"cabal update\ncabal build all\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Install it in the ",(0,s.jsx)(e.code,{children:"~/.local/bin"})," directory:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'mkdir -p ~/.local/bin\ncp -p \\\n  "$(find . -name cardano-db-sync -executable -type f)" \\\n  ~/.local/bin/\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Note:"})," ",(0,s.jsx)(e.code,{children:"~/.local/bin"})," should be in the ",(0,s.jsx)(e.code,{children:"$PATH"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["Note, we avoid using ",(0,s.jsx)(e.code,{children:"cabal install"})," because that method prevents the installed binaries from reporting\nthe git revision with the ",(0,s.jsx)(e.code,{children:"--version"})," switch."]}),"\n",(0,s.jsx)(e.p,{children:"Check the version that has been installed:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"cardano-db-sync --version\n"})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(o,{...n})}):o(n)}},8453:(n,e,l)=>{l.d(e,{R:()=>c,x:()=>t});var s=l(6540);const i={},a=s.createContext(i);function c(n){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);