"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[308],{1596:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>i});var o=s(4848),r=s(8453);const c={},a="Docker",d={id:"Installation/docker",title:"Docker",description:"Quickstart",source:"@site/docs/Installation/docker.md",sourceDirName:"Installation",slug:"/Installation/docker",permalink:"/cardano-db-sync/Installation/docker",draft:!1,unlisted:!1,editUrl:"https://github.com/sgillespie/cardano-db-sync/tree/docs/docusaurus/doc/docusaurus/docs/Installation/docker.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/cardano-db-sync/"},next:{title:"Installing with Nix",permalink:"/cardano-db-sync/Installation/installing-with-nix"}},t={},i=[{value:"Quickstart",id:"quickstart",level:2},{value:"Clone the repository",id:"clone-the-repository",level:3},{value:"Start <code>cardano-node</code>, <code>postgresql</code>, and <code>cardano-db-sync</code> services using Docker",id:"start-cardano-node-postgresql-and-cardano-db-sync-services-using-docker",level:3},{value:"tada\ud83c\udf89",id:"tadatada",level:3},{value:"To connect to PostgreSQL database:",id:"to-connect-to-postgresql-database",level:3},{value:"To change PostgreSQL settings:",id:"to-change-postgresql-settings",level:3},{value:"To connect to another network:",id:"to-connect-to-another-network",level:3},{value:"Overriding Configuration",id:"overriding-configuration",level:3},{value:"Take control",id:"take-control",level:3},{value:"Build and load image using Nix",id:"build-and-load-image-using-nix",level:2},{value:"Restore from Snapshot",id:"restore-from-snapshot",level:2},{value:"Set folder where to download snapshot",id:"set-folder-where-to-download-snapshot",level:3},{value:"Disable options",id:"disable-options",level:2},{value:"Running Tests with Docker Postgres",id:"running-tests-with-docker-postgres",level:2},{value:"Building Docker images with Nix",id:"building-docker-images-with-nix",level:2},{value:"Running SMASH with docker-compose",id:"running-smash-with-docker-compose",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"docker",children:"Docker"}),"\n",(0,o.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,o.jsx)(n.h3,{id:"clone-the-repository",children:"Clone the repository"}),"\n",(0,o.jsxs)(n.p,{children:["Regular users should almost never attempt building and running from the ",(0,o.jsx)(n.code,{children:"master"})," branch. Instead,\nthey should build and run the latest release tag. The tags can be listed using the ",(0,o.jsx)(n.code,{children:"git tag"}),"\ncommand. Pre-release tags (eg things like ",(0,o.jsx)(n.code,{children:"12.0.0-preX"}),") should also be avoided in most cases."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"git clone git@github.com:IntersectMBO/cardano-db-sync.git\ncd cardano-db-sync\ngit checkout <latest-official-tag> -b tag-<latest-official-tag>\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"start-cardano-node-postgresql-and-cardano-db-sync-services-using-docker",children:["Start ",(0,o.jsx)(n.code,{children:"cardano-node"}),", ",(0,o.jsx)(n.code,{children:"postgresql"}),", and ",(0,o.jsx)(n.code,{children:"cardano-db-sync"})," services using Docker"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-console",children:"docker-compose up -d && docker-compose logs -f\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"tadatada",children:["tada","\ud83c\udf89"]}),"\n",(0,o.jsxs)(n.p,{children:["The PostgreSQL database is exposed on localhost port ",(0,o.jsx)(n.code,{children:"5432"})]}),"\n",(0,o.jsx)(n.h3,{id:"to-connect-to-postgresql-database",children:"To connect to PostgreSQL database:"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"$ psql -h 0.0.0.0 -p 5432 -U postgres -d cexplorer"})," (then enter secret password)"]}),"\n",(0,o.jsx)(n.h3,{id:"to-change-postgresql-settings",children:"To change PostgreSQL settings:"}),"\n",(0,o.jsxs)(n.p,{children:["Release ",(0,o.jsx)(n.code,{children:"13.1.0.0"})," introduced new flag ",(0,o.jsx)(n.code,{children:"POSTGRES_ARGS"})," inside\n",(0,o.jsx)(n.a,{href:"https://github.com/IntersectMBO/cardano-db-sync/blob/master/docker-compose.yml",children:"docker-compose.yml"})," file wih\nreccomended default values for ",(0,o.jsx)(n.code,{children:"maintenance_work_mem"})," and ",(0,o.jsx)(n.code,{children:"max_parallel_maintenance_workers"})," parameters."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"default start"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'docker compose up -d && docker-compose logs -f\n\ndocker ps | grep postgres\nCONTAINER ID   IMAGE                             COMMAND                  CREATED         STATUS                            PORTS                                       NAMES\nfe5fa531761a   postgres:11.18-alpine             "docker-entrypoint.s\u2026"   8 seconds ago   Up 7 seconds (health: starting)   0.0.0.0:5432->5432/tcp, :::5432->5432/tcp   cardano-db-sync-postgres-1\n\ndocker exec -it fe5fa531761a bash\nfe5fa531761a:/# psql -U postgres -c "SHOW ALL" | grep maintenance\n maintenance_work_mem                   | 1GB                                        | Sets the maximum memory to be used for maintenance operations.\n max_parallel_maintenance_workers       | 4                                          | Sets the maximum number of parallel processes per maintenance operation.\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["setting custom values through ",(0,o.jsx)(n.code,{children:"POSTGRES_ARGS"}),":"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'export POSTGRES_ARGS="-c maintenance_work_mem=2GB -c max_parallel_maintenance_workers=8"\ndocker compose up && docker-compose logs -f\n\ndocker exec -it b73d677399de bash\nb73d677399de:/# psql -U postgres -c "SHOW ALL" | grep maintenance\n maintenance_work_mem                   | 2GB                                        | Sets the maximum memory to be used for maintenance operations.\n max_parallel_maintenance_workers       | 8                                          | Sets the maximum number of parallel processes per maintenance operation.\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"SHOW"})," displays the current setting of run-time parameters. Be aware that it can differ from the values in ",(0,o.jsx)(n.code,{children:"postgresql.conf"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"to-connect-to-another-network",children:"To connect to another network:"}),"\n",(0,o.jsxs)(n.p,{children:["To connect to different network (preprod or preview) use ",(0,o.jsx)(n.code,{children:"NETWORK"})," environment variable:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"NETWORK=preprod docker-compose up -d && docker-compose logs -f\n"})}),"\n",(0,o.jsx)(n.h3,{id:"overriding-configuration",children:"Overriding Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Overriding the configuration file can be done by passing the ",(0,o.jsx)(n.code,{children:"DB_SYNC_CONFIG"})," environment\nvariable. First, add a bind mount to the ",(0,o.jsx)(n.code,{children:"cardano-db-sync"})," service:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"cardano-db-sync:\n  image: cardano-db-sync\n  # <-- Snip --\x3e\n  volumes:\n    - db-sync-data:/var/lib/cexplorer\n    - node-ipc:/node-ipc\n    # Add the bind mount here\n    - ./config/network/mainnet:/data\n  # <-- Snip --\x3e\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Set the configuration file with ",(0,o.jsx)(n.code,{children:"DB_SYNC_CONFIG"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"export DB_SYNC_CONFIG=/data/db-sync-config.json\ndocker-compose up -d && docker-compose logs -f\n"})}),"\n",(0,o.jsx)(n.h3,{id:"take-control",children:"Take control"}),"\n",(0,o.jsxs)(n.p,{children:["Excluding the ",(0,o.jsx)(n.code,{children:"NETWORK"})," ENV will simply just call the ",(0,o.jsx)(n.code,{children:"cardano-db-sync"})," executable\nas the entrypoint, so you must pass a command and\narguments in this case to provide config at runtime. The ",(0,o.jsx)(n.code,{children:"--schema-dir"})," argument is preset,\nso is not required."]}),"\n",(0,o.jsxs)(n.p,{children:["Using Docker run to demonstrate, but can be achieved using ",(0,o.jsx)(n.code,{children:"docker-compose"})," too via\n",(0,o.jsx)(n.code,{children:"service.command"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"docker run \\\n  -v $PWD/config/network/mainnet/cardano-db-sync:/config \\\n  -v $PWD/config/network/mainnet/genesis:/genesis \\\n  -v $PWD/node-ipc:/node-ipc \\\n  ghcr.io/IntersectMBO/cardano-db-sync:13.1.1.2-docker \\\n    run --config /config/config.yaml --socket-path /node-ipc/node.socket # command\n"})}),"\n",(0,o.jsx)(n.h2,{id:"build-and-load-image-using-nix",children:"Build and load image using Nix"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"nix build .#dockerImage\ndocker load -i ./result\n"})}),"\n",(0,o.jsx)(n.h2,{id:"restore-from-snapshot",children:"Restore from Snapshot"}),"\n",(0,o.jsxs)(n.p,{children:["Restoring a database by running from gensis can take a number of hours, snapshots are provided for\nMainnet to restore the postgres database. See the\n",(0,o.jsx)(n.a,{href:"https://github.com/IntersectMBO/cardano-db-sync/releases",children:"latest releases"})," for a recent snapshot\nmatched with the ",(0,o.jsx)(n.code,{children:"cardano-db-sync"})," version."]}),"\n",(0,o.jsxs)(n.p,{children:["To download and restore a snapshot include ",(0,o.jsx)(n.code,{children:"RESTORE_SNAPSHOT"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"RESTORE_SNAPSHOT=https://update-cardano-mainnet.iohk.io/cardano-db-sync/db-sync-snapshot-schema-10-block-6014140-x86_64.tgz \\\ndocker-compose up && docker-compose logs -f\n"})}),"\n",(0,o.jsx)(n.h3,{id:"set-folder-where-to-download-snapshot",children:"Set folder where to download snapshot"}),"\n",(0,o.jsxs)(n.p,{children:["The snapshot is downloaded in current working directory. Setting the working directory should allow to choose where the download is done.\nFor ",(0,o.jsx)(n.code,{children:"docker-compose"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"cardano-db-sync:\n    image: ghcr.io/input-output/cardano-db-sync:13.1.1.2-docker\n    ...\n    working_dir: /var/lib/cexplorer\n    volumes:\n      - db-sync-data:/var/lib/cexplorer\n      - node-ipc:/node-ipc\n    restart: on-failure\n    ...\n"})}),"\n",(0,o.jsxs)(n.p,{children:["After starting ",(0,o.jsx)(n.code,{children:"docker-compose"})," the snapshot file should be downloaded to specified directory\nwhich exact location can be found by using ",(0,o.jsx)(n.code,{children:"docker volume inspect"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'docker volume inspect cardano-db-sync_db-sync-data\n[\n    {\n        "CreatedAt": "2022-11-08T12:44:55+01:00",\n        "Driver": "local",\n        "Labels": {\n            "com.docker.compose.project": "cardano-db-sync",\n            "com.docker.compose.version": "1.29.2",\n            "com.docker.compose.volume": "db-sync-data"\n        },\n        "Mountpoint": "/var/snap/docker/common/var-lib-docker/volumes/cardano-db-sync_db-sync-data/_data",\n        "Name": "cardano-db-sync_db-sync-data",\n        "Options": null,\n        "Scope": "local"\n    }\n]\n'})}),"\n",(0,o.jsxs)(n.p,{children:["for ",(0,o.jsx)(n.code,{children:"docker"})," use ",(0,o.jsx)(n.code,{children:"--workdir="}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"disable-options",children:"Disable options"}),"\n",(0,o.jsxs)(n.p,{children:["Consult the configuration ",(0,o.jsx)(n.a,{href:"docs/configuration.md",children:"docs"})," for what these options mean, assuming you have read that\nthey can be accessed via env variables passed to docker-compose. Leave out any that do not make sense, eg if\nyou just want to disable the ledger use ",(0,o.jsx)(n.code,{children:"DISABLE_LEDGER=Y docker-compose up"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'DISABLE_LEDGER=Y \\\nEXTRA_DB_SYNC_ARGS="--disable-cache --disable-epoch" \\\ndocker-compose up\n'})}),"\n",(0,o.jsx)(n.h2,{id:"running-tests-with-docker-postgres",children:"Running Tests with Docker Postgres"}),"\n",(0,o.jsxs)(n.p,{children:["Create a ",(0,o.jsx)(n.code,{children:"pgpass-test"})," file with the credentials of (taken from config/secrets/postgres_* files):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'echo "localhost:5432:cexplorer:postgres:v8hlDV0yMAHHlIurYupj" > config/pgpass-test\nchmod 0600 config/pgpass-test\n'})}),"\n",(0,o.jsxs)(n.p,{children:["inside ",(0,o.jsx)(n.code,{children:"config/pgpass-test"})]}),"\n",(0,o.jsx)(n.p,{children:"Startup docker postgres via:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"docker-compose -f docker-test.yml up\n"})}),"\n",(0,o.jsx)(n.p,{children:"Setup database with tables:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"PGPASSFILE=$PWD/config/pgpass-test \\\ncabal run cardano-db-tool run-migrations -- --mdir schema/ --ldir .\n"})}),"\n",(0,o.jsx)(n.p,{children:"Running the tests:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"PGPASSFILE=$PWD/config/pgpass-test \\\ncabal test cardano-db\n"})}),"\n",(0,o.jsx)(n.p,{children:"When you've finished with testing either docker-compose down or Ctl-C the terminal session."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"docker-compose down -f docker-test.yml\n"})}),"\n",(0,o.jsx)(n.h2,{id:"building-docker-images-with-nix",children:"Building Docker images with Nix"}),"\n",(0,o.jsx)(n.p,{children:"Building a Docker image for cardano-db-sync requires a Linux host to compile on."}),"\n",(0,o.jsx)(n.p,{children:"Assuming you want a Linux x86 image run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"nix build .#packages.x86_64-linux.cardano-db-sync-docker\n"})}),"\n",(0,o.jsxs)(n.p,{children:["At the end it will generate a ",(0,o.jsx)(n.code,{children:"tar.gz"})," file linked to ",(0,o.jsx)(n.code,{children:"./result"})]}),"\n",(0,o.jsx)(n.p,{children:"that can be loaded into docker and run as a normal image."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ docker load < result\n\n$ docker image ls\nREPOSITORY                    TAG            IMAGE ID       CREATED         SIZE\ncardano-db-sync               latest         a5168d8c04b9   54 years ago    1.16GB\n\n# Run this as\n$ docker run cardano-db-sync\n"})}),"\n",(0,o.jsx)(n.h2,{id:"running-smash-with-docker-compose",children:"Running SMASH with docker-compose"}),"\n",(0,o.jsx)(n.p,{children:"Edit the docker-compose.yml to add a listening port for the postgres container\ne.g."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'services:\n  postgres:\n    ...\n    restart: on-failure\n    ports:\n      - "5432:5432"\n    logging:\n    ...\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Follow the instructions from ",(0,o.jsx)(n.code,{children:"Restore from Snapshot"})," and wait until the snapshot has restored.\nCreate a ",(0,o.jsx)(n.code,{children:"pgpass-local"})," file with the credentials of (taken from config/secrets/postgres_* files):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'echo "localhost:5432:cexplorer:postgres:v8hlDV0yMAHHlIurYupj" > config/pgpass-local\nchmod 0600 config/pgpass-local\n'})}),"\n",(0,o.jsx)(n.p,{children:"Run SMASH-server"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"PGPASSFILE=config/pgpass-test cabal exec -- cardano-smash-server \\\n     --config config/mainnet-config.yaml \\\n     --port 3100\n"})}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"doc/smash.sh",children:"smash documentation"})," for querying the SMASH-server"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var o=s(6540);const r={},c=o.createContext(r);function a(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);